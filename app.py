import streamlit as st
import os
import time
import re
# CORRE√á√ÉO 1: Importar o m√≥dulo principal 'firebase_admin' para usar '_apps'
import firebase_admin 
from firebase_admin import credentials, initialize_app, firestore
from google.cloud.firestore import Client
from typing import Dict, Any


# --- Configura√ß√µes & Chaves (Puxadas do secrets.toml) ---
# A chave OpenAI √© apenas um placeholder de demonstra√ß√£o.
OPENAI_KEY = st.secrets.get("OPENAI_API_KEY", None) 
FREE_LIMIT = int(st.secrets.get("DEFAULT_FREE_LIMIT", 3)) # Garante que o limite √© um inteiro

# ----------------------------------------------------
#               CONFIGURA√á√ÉO DO FIREBASE
# ----------------------------------------------------

# Verifica se o Firebase j√° foi inicializado na sess√£o
if 'db' not in st.session_state:
    st.session_state['db'] = None
    
    try:
        # 1. Obter as credenciais do secrets.toml
        firebase_config = st.secrets.get("firebase", None)
        
        if not firebase_config:
            st.warning("‚ö†Ô∏è Configura√ß√£o [firebase] n√£o encontrada. O app funcionar√° no MODO OFFLINE/SIMULA√á√ÉO.")
        else:
            # Corrige a private_key (substitui \\n por \n)
            private_key = firebase_config.get("private_key", "").replace("\\n", "\n")
            
            # Cria o objeto de credenciais de servi√ßo
            service_account_info = {
                k: v for k, v in firebase_config.items() if k not in ["private_key"]
            }
            service_account_info["private_key"] = private_key

            # 2. Inicializar o Firebase Admin SDK (s√≥ se n√£o estiver inicializado)
            # CORRE√á√ÉO 2: Usa 'firebase_admin._apps' em vez de 'firestore._apps'
            if not firebase_admin._apps:
                cred = credentials.Certificate(service_account_info)
                # Inicializa o app com um nome para evitar o erro de re-inicializa√ß√£o
                initialize_app(cred, name="anuncia_app")
            
            # 3. Conectar ao Firestore
            # Tenta usar o client associado ao app inicializado
            db_client = firestore.client(app=firebase_admin.get_app("anuncia_app"))
            st.session_state["db"] = db_client # Armazena o cliente no estado da sess√£o
            st.success("‚úÖ Conex√£o Firebase/Firestore estabelecida.")

    except Exception as e:
        # Nota: Deixa este erro gen√©rico, pois pode ser problema de Private Key ou Regra de Seguran√ßa.
        st.error(f"‚ùå Erro ao inicializar Firebase: {e}")
        st.info("A contagem de an√∫ncios usar√° um sistema de contagem SIMULADA.")
        st.session_state["db"] = "SIMULATED" # Sinaliza que est√° em modo de simula√ß√£o


# ----------------------------------------------------
#           FUN√á√ïES DE CONTROLE DE USO (FIREBASE/SIMULADO)
# ----------------------------------------------------

def get_user_data(user_id: str) -> Dict[str, Any]:
    """Busca os dados do usu√°rio no Firestore (ou simula a busca)."""
    if st.session_state.get("db") and st.session_state["db"] != "SIMULATED":
        # Modo Firebase
        user_ref = st.session_state["db"].collection("users").document(user_id)
        doc = user_ref.get()
        if doc.exists:
            return doc.to_dict()
    # Modo Simulado (Fallback)
    return st.session_state.get(f"user_{user_id}", {"ads_generated": 0, "plan": "free"})

def increment_ads_count(user_id: str):
    """Incrementa a contagem de an√∫ncios (Firebase ou Simulado)."""
    user_data = get_user_data(user_id)
    new_count = user_data.get("ads_generated", 0) + 1
    
    if st.session_state.get("db") and st.session_state["db"] != "SIMULATED":
        # Modo Firebase
        user_ref = st.session_state["db"].collection("users").document(user_id)
        # Atualiza o Firestore
        user_ref.set({
            "ads_generated": new_count,
            "last_used": firestore.SERVER_TIMESTAMP,
            "plan": user_data.get("plan", "free")
        }, merge=True)
    else:
        # Modo Simulado (apenas para a sess√£o Streamlit atual)
        user_data["ads_generated"] = new_count
        st.session_state[f"user_{user_id}"] = user_data 

    return new_count

# ----------------------------------------------------
#           IMPLEMENTA√á√ÉO DE LOGIN SIMPLIFICADO
# ----------------------------------------------------

if 'logged_in_user_id' not in st.session_state:
    st.session_state['logged_in_user_id'] = None

st.set_page_config(page_title="AnuncIA - Gerador de An√∫ncios", layout="centered")
st.title("‚ú® AnuncIA ‚Äî O Gerador de An√∫ncios Inteligente")

# √Årea de Login/Identifica√ß√£o na Sidebar
with st.sidebar:
    st.title("üîí Login/Acesso")
    email_input = st.text_input("Seu E-mail (Para controle de uso)", 
                                placeholder="seu@email.com")
    
    if st.button("Acessar / Simular Login"):
        if "@" in email_input:
            # 1. Aplica a l√≥gica anti-abuso de e-mail alias (ignora '+alias')
            clean_email = email_input
            if "+" in email_input:
                local_part, domain = email_input.split("@")
                local_part = local_part.split("+")[0]
                clean_email = f"{local_part}@{domain}"
            
            # 2. Cria um ID limpo para usar como Document ID no Firestore
            # Subistitui caracteres que podem dar problema no Firebase ID
            user_doc_id = re.sub(r'[^\w\-@\.]', '_', clean_email)
            
            st.session_state['logged_in_user_id'] = user_doc_id
            st.success(f"Logado como: {clean_email}")
        else:
            st.error("Por favor, insira um e-mail v√°lido.")

# ----------------------------------------------------
#                   INTERFACE PRINCIPAL
# ----------------------------------------------------

if not st.session_state['logged_in_user_id']:
    st.info("Insira seu e-mail na barra lateral para come√ßar seu teste gr√°tis.")
else:
    # --- Verifica√ß√£o de Limite e Exibi√ß√£o de Status ---
    user_id = st.session_state['logged_in_user_id']
    user_data = get_user_data(user_id)
    ads_used = user_data.get("ads_generated", 0)

    st.markdown("---")
    st.markdown(f"**Status:** Voc√™ usou **{ads_used}** de **{FREE_LIMIT}** an√∫ncios gr√°tis.")
    st.markdown("---")


    if ads_used >= FREE_LIMIT:
        st.warning("üö´ **Limite gratuito atingido!** Fa√ßa upgrade para liberar o uso ilimitado.")
        st.markdown(f"**[üöÄ Clique aqui para ver nossos planos (R${19.90}/m√™s)](LINK_PARA_PAGAMENTO)**")
    
    else:
        # --- Formul√°rio de Gera√ß√£o de An√∫ncios ---
        with st.form("input_form"):
            st.subheader("üõ†Ô∏è Crie Seu An√∫ncio Profissional")
            
            # Campos do formul√°rio...
            product_type = st.selectbox("Tipo de produto", ["Ambos (F√≠sico e Digital)", "Produto f√≠sico", "Produto digital"])
            description = st.text_area("Descri√ß√£o do produto e o que voc√™ quer vender:", max_chars=800)
            
            # Bot√£o de submiss√£o
            submitted = st.form_submit_button("Gerar An√∫ncio com IA")

        if submitted:
            # L√≥gica de processamento e chamada de API (simula√ß√£o)
            with st.spinner("üß† A IA est√° gerando sua estrat√©gia e copy..."):
                time.sleep(2) # Simula o tempo de API
                
                # SIMULA√á√ÉO DE GERA√á√ÉO
                simulated_title = f"‚ú® Venda {product_type}: {description[:40]}..."
                
                # 1. Incrementa a contagem no Firebase/Simula√ß√£o
                new_count = increment_ads_count(user_id)
                
                # 2. Exibi√ß√£o do resultado (simula√ß√£o)
                st.success(f"‚úÖ An√∫ncio Gerado com Sucesso! (Gr√°tis restante: {max(0, FREE_LIMIT - new_count)})")
                
                st.markdown(f"### üéØ T√≠tulo Sugerido: {simulated_title}")
                st.markdown(f"**Texto:** Sua descri√ß√£o foi transformada em um texto persuasivo para {product_type}. Use CTAs fortes e gatilhos mentais!")
                st.markdown(f"**Grupos Recomendados:** Marketing Digital BR, Vendas {product_type}, Ofertas Online.")
                st.markdown("---")

    # Bot√£o de debug (√∫til para ver se o Firebase est√° funcionando)
    if st.session_state["db"] != "SIMULATED":
        if st.button("Ver Meus Dados no Firestore (Debug)"):
            st.json(user_data)
            
if st.session_state.get("db") and st.session_state["db"] != "SIMULATED":
    st.success("‚úÖ Firebase est√° funcionando e autenticado corretamente.")
else:
    st.warning("‚ö†Ô∏è Firebase em modo simulado (sem conex√£o ativa).")
